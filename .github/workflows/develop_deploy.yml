# develop 브랜치 머지 시 쿠버네티스 배포
name: Deploy to Kubernetes

on:
  push:
    branches:
      - develop

env:
  IMAGE_TAG: ${{ github.sha }}
  APP_NAME: user-service  # 각 서비스별로 수정 필요

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew test

      - name: Build application
        run: ./gradlew build -x test

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem
          
          # 시크릿 설치 (처음에만)
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} \
          "bash /home/deploy/setup-secrets.sh"
          
          # 배포 실행
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} \
          "bash /home/deploy/deploy.sh ${{ env.APP_NAME }} ${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }} ${{ secrets.PROJECT_PATH }}"

          - uses: Ilshidur/action-discord@master
            if: always()
            with:
              args: ${{ job.status == 'success' && '✅ 배포 성공!' || '❌ 배포 실패!' }} ${{ env.APP_NAME }}
            env:
              DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
