name: PR Build Test

on:
  pull_request:
    branches:
      - develop
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
          
    env:
      DB_URL: jdbc:mysql://127.0.0.1:3306/testdb
      DB_USERNAME: testuser
      DB_PASSWORD: testpass
      JPA_DDL_AUTO: ${{ secrets.JPA_DDL_AUTO }}
      KAFKA_BOOTSTRAP_SERVERS: ${{ secrets.KAFKA_BOOTSTRAP_SERVERS }}
      KAFKA_CONSUMER_GROUP: ${{ secrets.KAFKA_CONSUMER_GROUP }}
      GRPC_USER_SERVICE_ADDRESS: ${{ secrets.GRPC_USER_SERVICE_ADDRESS }}
      SERVER_PORT: ${{ secrets.SERVER_PORT }}

    steps:
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew test

      - name: Build application
        run: ./gradlew build

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: build/reports/tests/test/
